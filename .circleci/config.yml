---
version: 2
jobs:
  test:
    docker:
      - image: node:10.5.0-alpine
    working_directory: ~/grpc-web-front
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - run:
          command: yarn add -D tslint
      - run:
          command: yarn tslint src/App.tsx
  build:
    docker:
      - image: node:10.5.0-alpine
    working_directory: ~/grpc-web-front
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - run:
          command: apk add --no-cache ca-certificates
      - run:
          command: npm i && npm run _build
      - persist_to_workspace:
          root: .
          paths:
            - .
  package:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/grpc-web-front
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - attach_workspace:
          at: .
      - run:
          name: install kubectl
          command: apt-get update && apt-get install kubectl
      - run:
          name: gcloud auth
          command: |
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud --quiet auth configure-docker
            gcloud config set project agdc-k8s
            gcloud --quiet config set container/cluster agop-k8s
            gcloud config set compute/zone asia-northeast1
            gcloud --quiet container clusters get-credentials agop-k8s
            gcloud config set container/use_client_certificate True
      - run:
          name: docker build & push
          command: |
            if [[ -z "${CIRCLE_PULL_REQUEST}" ]] ; then
              docker build -t asia.gcr.io/agdc-k8s/grpc-web-front:${CIRCLE_SHA1} .
              docker tag asia.gcr.io/agdc-k8s/grpc-web-front:${CIRCLE_SHA1} asia.gcr.io/agdc-k8s/grpc-web-front:latest
              docker push asia.gcr.io/agdc-k8s/grpc-web-front
            else
              echo "Do not run docker"
            fi
      - run:
          name: deploy to k8s cluster
          command: |
            kubectl patch deployment grpc-web-front -p "{\"spec\": {\"template\": {\"metadata\": {\"labels\": {\"date\": \"$(date +'%s')\" }}}}}"

workflows:
  version: 2
  test-and-build-and-package:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - package:
          requires:
            - build
          filters:
            branches:
              only: master